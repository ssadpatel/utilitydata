---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTU1JS3hNbzlaWDczWktFM3pab0ttakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpFd01EYzFPREEzV2hjTk1qY3dOekV3TURjMQpPREEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHAyUkdTZ2ViUzJLQWJETkVTSnBjSDlyRzNzMzIrUkRtNlErak5vN2FHVlpyc2dMZzEKV0NSekVXbkxvMjlNelBJMENmSFRHcTROVVd4TDg4dGtlNC9NazVmOThzeFpHTUZpc1hBMGRMek94K293QUFmbgpyOWtNL1U3d1crRXhsbHNnMHB1NkkramYzWVpScG9YTzJaN1NlTFF6bUxndllUYWdCZ0ovZ2g5cTd4ZzNvLzNPCjJwRVhRZFU4SHBDQy9uRHUxamJTRitMakxqMEZKZEZReWQvQWk0THpGL0htenpMeEdySVpmMlQwSzQ1VWJnOFkKM2lxaElNZUhDUW96T1ZxdFN4K2Q2ZDV1OGtTeEFHN3RabTRNdUJjSFdzUllIdUlGMnc0NERHelFoZk1rdHJtYwpUU2VHWC9oSWtIeU9CVGY2R1FEeU1jVTVpL3lDMTZ1bDEzRXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV5VmhQbnI5YjVQUVE3ZTJwdEdIbDZ3cGR3eFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFPanVaVDFmaUpkVGp2ZS85WStwMVBWT3ZvZFk3cGdEcmdhUURBai9NeFY4RFh1SUZhSnN1aFVlCnBqL0E5UTFrYWtScDg2cmhkSlo4eE1tTlVhaWNzdzhsWjlScWorOTJxNlpiQWVkV0tlZkkyWHhicXRZeTVMRHcKcGo2TndFUGNhWG1haVA1SXQ0SmVPUVA0TFlmNnNibXVBcFhpYTFIVnZ2OHdMVFIrNFpNc3BQZ2EzcGVXeGlMRgpDOE1KdWtKaUROY0Y2aUVJck5kdkVMOEVaVVFQeVpBMWljNHAwTmlQZUdmZFlNMjkrUDN0bXZEUFYvUmxBbXhpCmR2UjdNYVdHTk1aME5JUjVrcE8vTnAzRTQ0WHUyTGxsZ05TcDdNcndHaU4wODdBelZsc2dTcWFmWDYzMWYrOFgKYkhwMzdTVmpWMmFhaDRTWG5kM1orcWY0TWpTS2x4OD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNmRrUmtvSG0wdGlnR3d6UkVpYVhCL2F4dDdOOXZrUTV1a1BvemFPMmhsV2E3SUM0Ck5WZ2tjeEZweTZOdlRNenlOQW54MHhxdURWRnNTL1BMWkh1UHpKT1gvZkxNV1JqQllyRndOSFM4enNmcU1BQUgKNTYvWkRQMU84RnZoTVpaYklOS2J1aVBvMzkyR1VhYUZ6dG1lMG5pME01aTRMMkUyb0FZQ2Y0SWZhdThZTjZQOQp6dHFSRjBIVlBCNlFndjV3N3RZMjBoZmk0eTQ5QlNYUlVNbmZ3SXVDOHhmeDVzOHk4UnF5R1g5azlDdU9WRzRQCkdONHFvU0RIaHdrS016bGFyVXNmbmVuZWJ2SkVzUUJ1N1dadURMZ1hCMXJFV0I3aUJkc09PQXhzMElYekpMYTUKbkUwbmhsLzRTSkI4amdVMytoa0E4akhGT1l2OGd0ZXJwZGR4TVFJREFRQUJBb0lCQUZtQkY5UzNtNTJBQkdmVwpFLythZlp3eXMvclgzSDBDcUFXL0VGQUZKVXR0WUlxOUNjU0JKQkpXeStPQmZvd3F0Vmx0cFAxajdOSjBJN3MrCmFNN2c3RDBsRUx2R1BxaXJiUGxWYU5qckJZa3Z3MWJ6N0JLbG43SDFFazIxSFJCWnVDOXI3T2JsNzdBZm5kV0sKb3hSMC92RVgrZ0QxcHltYlQ4a1lBOFRDRFR4ajQ4cm92cE83YkJqNm12VDFESnJNeU83dlhRTXJqb1EyUmRSRQpsODBNU1p4eDd6L0dpM25HZDM1b2ZLZXRxY01QYTN0OCtGTkNSSWpCU1dyUGwzVmp4MDJEaWM4ZXhoM0R0L01nCmZQQ09SNmFxZVhURDRucVZsa2pTVStQOWZ1ZTRrTVFkc29obW82aW1paldxWEpGd1pVSjJNZkxlTmVBYkU1dHgKSDRobW5FRUNnWUVBN3VCa1g2eDU3K002OHE3VTE5a09hdjN1bGhSMXJudjU5WGVRekREdmNCTkRJaXBXZFJ0dApuSHpWNTRXeUZjY1h0Mm9ZSHZkdzFZWnlONDJkSitFZDZlZzMxSzFIYXdRLzFlNWt1eDQvbng0NkZYdm9HZmZHClN3eEd5WDZIaXk0TXV3eWFlNjlGeEtsMjQvRHFzMHFxc1dRQ01hd0owb1IvRThlYkpjQVlZajBDZ1lFQStweGwKbTgxeUVCTHV6TmF2OTNOc3g4L0E3YXA3WFc2MUl1aTIrK0c0VW5DMHpuK2ZzWjJ1UFhPVExrUFk0MlY3aTEwTApFaUkza2lUelhoWjZHNnF6VmRCRnpDaHU5ZXdCU08zZ1BrVUQzS053S25UN1RxbStyY1V5ZlpFMmVOUjhwSzBNCk5sb3RXYzY0OWdKSC9rdERidXV6UFJPZG9mb1Nkc1RuYXZySi9nVUNnWUFsSlRHV2l3eC9HQmVmaXo0L3ZsbjIKbXp3UmpHYnNWZ3o5ZGJWSGUwaVFaZjVuZnF2cEUvWE1nc0VFZW83QndpN1c3NkdHbHpXdGpuV09XL0FYTm5OZgpYeVBuWjNhV2xwZVNuYnArT21yc1JGZ0Y1VG1uYUJjbXJtY0hpQ3h0b1NDTHFaOFFJcVkzdVo1cVBabFJmZ2ZqCkE4a3ZqakFNMDF1cmFMdWdlQ21TaFFLQmdRQ2d5eklDYWluU0dHT3hkOW5GV2dDa255NjVEdFpDVjJMTytDTlgKcnphMVptMEx4U1R3TUN4NGJ5d3kxZ05WdTJvdU84OTduZ3Fyc1J1WTliRDVDV2d4R2dWK2ZUN2NlTVZHUnFISApNajdORk94RndYTHd3TVovOWZOMFQzUjB5RmtFeTZiM1JKcXVjWTJKQW1Pd3pCZURGcVdVL1gzNVRGc0dhMFhVCkJQOFBCUUtCZ0d0SlFyMC9HSU9UL3V5MDRDclNHTDRJUEdMRGpPRXNTWWkvQTNweVF4ajcxTStSN2VzZ21kRlgKNWJpWURvM0JOS2tKcE94MmsrTzRDZHNybEFZdjRFZDhVeWdrYnN4L1RSblBDVW05Zi9XTFhxL0tkbm4wTVExVwpaamNydjVzNlhkOUcyKzNRdk43Ynk2Mm5TRlBoWWFiT0I0Q3FTbk5QWGdWQnU2bHdGek1VCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTU1JS3hNbzlaWDczWktFM3pab0ttakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpFd01EYzFPREEzV2hjTk1qY3dOekV3TURjMQpPREEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHAyUkdTZ2ViUzJLQWJETkVTSnBjSDlyRzNzMzIrUkRtNlErak5vN2FHVlpyc2dMZzEKV0NSekVXbkxvMjlNelBJMENmSFRHcTROVVd4TDg4dGtlNC9NazVmOThzeFpHTUZpc1hBMGRMek94K293QUFmbgpyOWtNL1U3d1crRXhsbHNnMHB1NkkramYzWVpScG9YTzJaN1NlTFF6bUxndllUYWdCZ0ovZ2g5cTd4ZzNvLzNPCjJwRVhRZFU4SHBDQy9uRHUxamJTRitMakxqMEZKZEZReWQvQWk0THpGL0htenpMeEdySVpmMlQwSzQ1VWJnOFkKM2lxaElNZUhDUW96T1ZxdFN4K2Q2ZDV1OGtTeEFHN3RabTRNdUJjSFdzUllIdUlGMnc0NERHelFoZk1rdHJtYwpUU2VHWC9oSWtIeU9CVGY2R1FEeU1jVTVpL3lDMTZ1bDEzRXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV5VmhQbnI5YjVQUVE3ZTJwdEdIbDZ3cGR3eFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFPanVaVDFmaUpkVGp2ZS85WStwMVBWT3ZvZFk3cGdEcmdhUURBai9NeFY4RFh1SUZhSnN1aFVlCnBqL0E5UTFrYWtScDg2cmhkSlo4eE1tTlVhaWNzdzhsWjlScWorOTJxNlpiQWVkV0tlZkkyWHhicXRZeTVMRHcKcGo2TndFUGNhWG1haVA1SXQ0SmVPUVA0TFlmNnNibXVBcFhpYTFIVnZ2OHdMVFIrNFpNc3BQZ2EzcGVXeGlMRgpDOE1KdWtKaUROY0Y2aUVJck5kdkVMOEVaVVFQeVpBMWljNHAwTmlQZUdmZFlNMjkrUDN0bXZEUFYvUmxBbXhpCmR2UjdNYVdHTk1aME5JUjVrcE8vTnAzRTQ0WHUyTGxsZ05TcDdNcndHaU4wODdBelZsc2dTcWFmWDYzMWYrOFgKYkhwMzdTVmpWMmFhaDRTWG5kM1orcWY0TWpTS2x4OD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURMVENDQWhXZ0F3SUJBZ0lSQUxheGVOZmV0VXFFbFh3WC9QalNiQzR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURjeE1EQTNOVGd3T0ZvWERUSTNNRGN4TURBMwpOVGd3T0Zvd0dERVdNQlFHQTFVRUF4TU5ZV1J0YVc0dFpHVm1ZWFZzZERDQ0FTSXdEUVlKS29aSWh2Y05BUUVCCkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtiLzUwNHZ5SjkwVzdJSGFTQ0o2NEJhVm9LQTFGdmlsNGxKa25TRE5DQVYKcDlGTEcxeEEveWFBMVZ0V09OVXFvbzZYM0U4eTh6RzR5UUNiSDE0dXNCc0JlenU5cVNnV0NjOHIvTzlZNmRrVQpickVvVG83Q09na1dmVlptSUN4U2pEUjZRdHhyeHVyelJMUktEemJpdGQzOHRvTWIyVlQyTExhN1N6ZWhCMk1XCkE2aEJoSmJuckNqZm5vVEdPZHAveEFBVzhzSENFVEJ6NEV0ayt6dWlQOWtvTGhoM2U0dVRBZTcra01EUGFFWGIKaFdZbnNvQjBxeVRBWVUrWG1TSUh4LzVEcWovZThiaWwvNEZoQmlSWEtMcGs1aFJYdEIzTVI3bmlsYllqVG5lUgpwem83MWpseG5VdmlQZ1FsQnltV0wxZWszcXRXNDIyUjRsU3RzcithL2hzQ0F3RUFBYU4yTUhRd0RnWURWUjBQCkFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUIKQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRk1sWVQ1Ni9XK1QwRU8zdHFiUmg1ZXNLWGNNV01CUUdBMVVkRVFRTgpNQXVDQ1d4dlkyRnNhRzl6ZERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVRBb3BacEVMMldzaHZkcGRvZkFlCnZXc2ZUZ0VITE5zc0xKWUFsQjczQ2kwYis0Sm9YdHVrV2JpcjR2SWlpMFIvQ08zdmc1dlJneWpQMGxGTmNkSEMKdzlyT3JKSkxmQzhWNDVkSmdhRThZZmkwQ3pwZDZRNVhuT3NqelhaWmlWL3pBekhmUExNSVZWTUwzMlBpLzV5egpwbUVBMlp1dUY0bWtzUm5KajlLSUxPNDJMamFLbFp6cjIvZkVSb2JYd2FFMjNXZlJlQXQ3Y1RjMExlOElNc0YzCkJtQk5sU2pKZS9nNlNhMGg2YnZ3V2dRTFlxU0NwaDg2ZEhpQTI2TzMyU3NkbFJpcG9YRStja3A3ZmY5RkpiQnEKaEVuV1Q1Z3ViOEdVVDFNNDUwUFFBbUEvMWFxb0t2ak02Y0VmeFU3UW5ycjBGVGFNYXJHWG05Rnc5RER1OWZhdwoyUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcHYvblRpL0luM1Jic2dkcElJbnJnRnBXZ29EVVcrS1hpVW1TZElNMElCV24wVXNiClhFRC9Kb0RWVzFZNDFTcWlqcGZjVHpMek1iakpBSnNmWGk2d0d3RjdPNzJwS0JZSnp5djg3MWpwMlJSdXNTaE8KanNJNkNSWjlWbVlnTEZLTU5IcEMzR3ZHNnZORXRFb1BOdUsxM2Z5Mmd4dlpWUFlzdHJ0TE42RUhZeFlEcUVHRQpsdWVzS04rZWhNWTUybi9FQUJieXdjSVJNSFBnUzJUN082SS8yU2d1R0hkN2k1TUI3djZRd005b1JkdUZaaWV5CmdIU3JKTUJoVDVlWklnZkgva09xUDk3eHVLWC9nV0VHSkZjb3VtVG1GRmUwSGN4SHVlS1Z0aU5PZDVHbk9qdlcKT1hHZFMrSStCQ1VIS1pZdlY2VGVxMWJqYlpIaVZLMnl2NXIrR3dJREFRQUJBb0lCQUZPUDd4Uy9janJmaFZaeQp3TmJJVEcvZ1JETnU5Vk80OFN5QUJPbUtFVllRbi9WcENKckQ1eWhFQlA1OENWb1l5RmhqZ3BpYW5QZi9SNHluCkVpNFZYSWRXMld3T1BndFI0N3luZlJ2aXVMaW5zYSt4eElWSWlMT3RiakFDVUF6OWpTeGhGUDJvYkZONlFLR2EKQVR6c2VpWkc0cWgrRWVTaWZjTTl1cWh1U2Z6NDRzM0RSSzRYWXI3UWRQaThDNTF0UzhhZkhpVmxIM1NJVkl6Ywp6WkdNZmplSnU4Q0ZBQzRsKzBhSEM1RFlLcjBYSXljVVNuZ3U5MEdjNy9XdXNBOXhoMHFwYVE2N2VVa250MzJoCkZBazJKN0R6dy8yRE96UVZHV2RmZHZ5Y2Z1QThwUnY0aitJV3pWTTMzck43eEhEY2xFcW54QWw5S09JTjZ0dDIKWFNrZXFnRUNnWUVBeEV2Rll1TmMrS0pIS1pwWk9uem5idURGa0VscUZ4QWcvRXNlSklEQlg4c0NLMTFWRTNtQwpxVVhRbFk3UGw0WFoxQktDSDMvNVlvc0QwaEljSXhwaVJpK3ZvUjE0UjBybVQxRVNyNkVzVlgzMlo1WDZDaFlZCjJ1dE9wbjlSZ0hVNVVXSlVnbjZVejM5bDhGT3p0T1loTVQxRVdLcUthNkc3UnNpdFplZDkwUUVDZ1lFQTJjc0cKWmMrRkd2SC9FMDBic0l3TGNEd3Y5WGFieHk3MmRlTmx4ZE41OHFCMWlKNTZmM2N5UlMvM0E3Nk01Z2RXQWw5aQpaUWFEUENzQnpKSkRtM1FUSnV2eTVTc2o1VzczY2dIQ1NvanRVWEdSTTlSa2EwZFVaR1ZHdzVFeE1HZXBnVXd2ClJmZy9jYlJ1bklaV202SGVneS9xTTdwYjFRMHlQZE9MNGxYeTh4c0NnWUFwOU9najB1VTBYN3RHTVMrUlNORk8KNmN4UW91Q0NQWGhQZE43a2ZvRFdzTld0M3kwb0ZIalJKWk1INUphS2xKbVNzc0lOYVpVc2N2cEdGSWpmRit5WgpnK2ZPVURZOVJzMGpkdmkvZ1h1d2FsUVluLzNwMmY5R0M3V3I4TnJDMGt1R0ViWnVqZy9RcWpKbncveE5Wa01SCit6NTRsVHN3OWtqSlFHdVB0SU00QVFLQmdRQ3JoOXRpRkM4aEtiZGIzRDhTclRuVkM1STZJVkJQY0Exc2k4eDgKSWpMSmhOY000c1JYMytrWDFNOFhnOXcwejFKT1RCR1N2NjVjbFFLMXUvekRVb2hDLzFJdWErdTVwOHY3WHFkSApUTkNjZEhXSC9KK2FYbk41SHNxOC9IMWhRa09lTWdLSmVSdCswanpMeW9JcjBURU80WTN6YjdNaitXQzRrUVI3CkhuWmFRUUtCZ0JSMzQyRTRnaHdhQWNlSFl0TGZVeFUrK01aQ0cwUHZlTFVZd2F6aVdTTloyNXVLcVh2THhLOHoKWkc4ZlE5c3ViUEdpNjhZM1AySENGNVFTcnQ1anQxalFuNjJuL0N6ZXdHZDliemhLeVNiZ0NRcXBuZW5WWVNLRAp1dVcrdW12aVBPd0FVYmFqVklJQW00cnlydjFPWnQvRkZ4VUZOQVJBRTFSVUhTQUNLR2xBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTU1JS3hNbzlaWDczWktFM3pab0ttakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpFd01EYzFPREEzV2hjTk1qY3dOekV3TURjMQpPREEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHAyUkdTZ2ViUzJLQWJETkVTSnBjSDlyRzNzMzIrUkRtNlErak5vN2FHVlpyc2dMZzEKV0NSekVXbkxvMjlNelBJMENmSFRHcTROVVd4TDg4dGtlNC9NazVmOThzeFpHTUZpc1hBMGRMek94K293QUFmbgpyOWtNL1U3d1crRXhsbHNnMHB1NkkramYzWVpScG9YTzJaN1NlTFF6bUxndllUYWdCZ0ovZ2g5cTd4ZzNvLzNPCjJwRVhRZFU4SHBDQy9uRHUxamJTRitMakxqMEZKZEZReWQvQWk0THpGL0htenpMeEdySVpmMlQwSzQ1VWJnOFkKM2lxaElNZUhDUW96T1ZxdFN4K2Q2ZDV1OGtTeEFHN3RabTRNdUJjSFdzUllIdUlGMnc0NERHelFoZk1rdHJtYwpUU2VHWC9oSWtIeU9CVGY2R1FEeU1jVTVpL3lDMTZ1bDEzRXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV5VmhQbnI5YjVQUVE3ZTJwdEdIbDZ3cGR3eFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFPanVaVDFmaUpkVGp2ZS85WStwMVBWT3ZvZFk3cGdEcmdhUURBai9NeFY4RFh1SUZhSnN1aFVlCnBqL0E5UTFrYWtScDg2cmhkSlo4eE1tTlVhaWNzdzhsWjlScWorOTJxNlpiQWVkV0tlZkkyWHhicXRZeTVMRHcKcGo2TndFUGNhWG1haVA1SXQ0SmVPUVA0TFlmNnNibXVBcFhpYTFIVnZ2OHdMVFIrNFpNc3BQZ2EzcGVXeGlMRgpDOE1KdWtKaUROY0Y2aUVJck5kdkVMOEVaVVFQeVpBMWljNHAwTmlQZUdmZFlNMjkrUDN0bXZEUFYvUmxBbXhpCmR2UjdNYVdHTk1aME5JUjVrcE8vTnAzRTQ0WHUyTGxsZ05TcDdNcndHaU4wODdBelZsc2dTcWFmWDYzMWYrOFgKYkhwMzdTVmpWMmFhaDRTWG5kM1orcWY0TWpTS2x4OD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtuRGx2ZmRvcXVkLzl0eTMvTTl2ak13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURjeE1EQTNOVGd3T0ZvWERUSTNNRGN4TURBMwpOVGd3T0Zvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXFrMWd6dFZqRWZsTTRSTk5GTkJFOU16N0l6NCs5eERxbSt5L1hDZ1hjNExHLzRLVVhFa3AKVUxtd21XQ2xBU2JPSDJqMVBVdTNmeksvangxN25ueWowcU5jd2VaSDdkYTA0QjR4SWozdHV0NGY0cVlYS1JlMApOQTg2KzlMMFJMdGdmYVZZWEt6RHJJZnNMQVdBNXVBZ3hSeXI4SjBJNk54MFR6cG1TKzlCa1REQkpmbjM1K2R3CnlzWm94WXBxakpsQXhNVWFoOUZyNFJZZVVYbUhibFhhSkN6Vk9iVndHRklKc0pMZ1cwaXpPMFVmcHlPblovMEQKdHhIWHRHWlVkaUZTUTF4WE15SDhlUUwxbUhoSEZscmY2OWhiakVNY05rZ2w4MDQrR2RHRmo5RkUxYVhVL29TawpTcXpVSFl3YUxtbkN2eFM2RDc1VDlHcjRsa0VuaytMZEZ3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVXlWaFBucjliNVBRUTdlMnB0R0hsNndwZHd4WXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUQrcEZNc0NxSmFyNjkrUlFyaVM2empFTEFiRlBEN3M0L0tGU0xUbDg1MlBhaTN4ZGd1dkV6ODlRYVBnClIvaEZaOU5qQkk2UDczRHBHY0s4bXMxTlpHY2VCaXdHZ08wOTFBcTFvYlBCRkRhN3FJTjNXTFlicm5TWG8rM28KZ1dXc0JkZGF6OWwrWmNRckJqbkwyNkFMU3ZZZ1lBNXdYdkNRMXJzZzl5dS82azRKakp0SGdVR1ZMcURXR0U4Two1M3k4b3VjR21DL2MxL3NJUExFMFN2RGdGaEphZnlMdSs5N0FFb284RVhxVFZGbXJGTzYraGtnSlA0WGpSSldwClJKZDMwaHFYdUFKaUlaeS93ejVQUndYOGlBU0FrTG45R1M0WGVJYUpXendTck1WaWlObWF6QVJyMHQ5dFVzUk8KaE45eGNNTGdjUTJ4SzNIQUtVcHBpQXhmT2s4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcWsxZ3p0VmpFZmxNNFJOTkZOQkU5TXo3SXo0Kzl4RHFtK3kvWENnWGM0TEcvNEtVClhFa3BVTG13bVdDbEFTYk9IMmoxUFV1M2Z6Sy9qeDE3bm55ajBxTmN3ZVpIN2RhMDRCNHhJajN0dXQ0ZjRxWVgKS1JlME5BODYrOUwwUkx0Z2ZhVllYS3pEcklmc0xBV0E1dUFneFJ5cjhKMEk2TngwVHpwbVMrOUJrVERCSmZuMwo1K2R3eXNab3hZcHFqSmxBeE1VYWg5RnI0UlllVVhtSGJsWGFKQ3pWT2JWd0dGSUpzSkxnVzBpek8wVWZweU9uClovMER0eEhYdEdaVWRpRlNRMXhYTXlIOGVRTDFtSGhIRmxyZjY5aGJqRU1jTmtnbDgwNCtHZEdGajlGRTFhWFUKL29Ta1NxelVIWXdhTG1uQ3Z4UzZENzVUOUdyNGxrRW5rK0xkRndJREFRQUJBb0lCQUV0OFd0R3pJZU9ncGlRSgp3eHZicVFUOUtzQVhZaDl2SHg2WUZNWUxlMEdYRVEvR1dHNkRlMDJ0MFFwYkhTaGlnL0RHUEJXOFR3eVJlUGs5CnIwS3pxb1crSldwSTRVOFo0VGlLQ1d0TkdlZS9kMUNtSUJQMXpzbFlpdU4rUVFtS0tKM293VDdxMFJ6VGJxcWcKa2Q5RUx5SlBzQ0xKNkY0WEFYTHd4dEVYcnU5a2ZHSkYvVEdUOXRCaEI1WnNXWXg4OWpHQUFDRFAvUkFNVzk3WQpMMkE2RUg4WXJXM2d6QUp1djdBUzdCWmV2VSs2QUdlQmhuYk9WV2hKejUwcHhUV0RjWGdhRUhoOUVsNFJXcklDCjUzRUtraStNRWRKL1VYTzh6NkhaR01lTHpGVHlPWWR1TG9aSngwK2VKLzBjaitEZWgwY2h2Vm51RGljZ1AyMFAKQm1Fd1NqRUNnWUVBMzJRc28wUzFlbWtub01WS2dtMzlyMG01akIraDhQbHh5cnpRN1Y5NStYbUJNbjZFVGhkZgpzQTJ2ZDU2V3JYZTdFOWVwRzdMNkE1aFpxQ2Jrb1BYMDhacUxvMmkxNUpOZDdGWERiNWdHaExoYXplN3NMUitTCmp2ZWlqQ2h3Q2tvdVBkUjdSREl6WUZXd2krK3A4V2ppZFZMajQ4ODg2dTVyczBqWWRNN1lwU2tDZ1lFQXd5bFcKMG5wUHlqb0k5UGZhQ0Q1R3FTZ0NuVnJlVXppUXJ3YzdZbFRzdlIxbXdvT0M1ZVBwTmRjMmRXTzVWTDkzQzNpYQprQUUzaGJLR0ttN013WENhdUxQSVIvaW9YVmxDeVJlVW90MVNTc1h5UmlwREhWaVhPZzVrS0NzWlRuODVEeStQCkVPVXpxc253cmRsVVh6UXRXWlpPZGdDcjdBWEY5emdkRUZ2UGVEOENnWUI4cWUyVEszdlBGVEd0TVl4MEh5ZU0KRTZ0OVBBWG1jWDRFTXJ5eFN5L0pmZm9Ra0xRSzFGWnM3Q1k0cmdMT1NWdllKZWpVY1Z1K2Q5M0l6Zk9Xczh0KwpyTTB5WXZQbTNDcDFBaU52ZWpwaEJIU0FLYzRaSEY1d2RGZDh1ZkJVZmJNeWhBcEtNMjJpWEErSytETXhhbU8rCkw0VEhrOVllRVBGL2VxNTQrUm5EaVFLQmdIWmx5dTF3RkozNzdWa29VRmIxNlFwUVlwMng5ZlVJK1FXbVhvbCsKT2cxVkcvVmZzWGJrZUtRWVIwcWFVR0l3c2ZqOGx0Qk1YTEc0cDVwd2s3bTdKYkp1SjFBNmMzSUdaL1QxWUZBWgo4d1czNXc1WUwxVkxYSnQxQmFBMDNXcDQxbFgzSlZVN3A4ZXlNVmhXNDgvS0tNVVQ0Yy9IQW9YeXpySDNrZkpOCnNLVWpBb0dCQUxlZXVyaGhpcGlsY21tNkdwUGF1WnVESElPLy9pdDhGd1ZXb3RGa2VHYjFUZzFRZ0N3MC8rMkcKUmxJRHBaaHNYVzRYVTRtMm1PSGhtZjlPUkJhOEtobWlCSG1OV1dGcXhUVmoxcnhDcjBaU2hCQkRhQzMyODFyTgpoTHpxR3RtaklkcG5EcHFzWHpNMkJXakQzcXEyeUowQkR3Mm45Njg4dHlFVEJ1cnY2YmNFCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTU1JS3hNbzlaWDczWktFM3pab0ttakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpFd01EYzFPREEzV2hjTk1qY3dOekV3TURjMQpPREEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHAyUkdTZ2ViUzJLQWJETkVTSnBjSDlyRzNzMzIrUkRtNlErak5vN2FHVlpyc2dMZzEKV0NSekVXbkxvMjlNelBJMENmSFRHcTROVVd4TDg4dGtlNC9NazVmOThzeFpHTUZpc1hBMGRMek94K293QUFmbgpyOWtNL1U3d1crRXhsbHNnMHB1NkkramYzWVpScG9YTzJaN1NlTFF6bUxndllUYWdCZ0ovZ2g5cTd4ZzNvLzNPCjJwRVhRZFU4SHBDQy9uRHUxamJTRitMakxqMEZKZEZReWQvQWk0THpGL0htenpMeEdySVpmMlQwSzQ1VWJnOFkKM2lxaElNZUhDUW96T1ZxdFN4K2Q2ZDV1OGtTeEFHN3RabTRNdUJjSFdzUllIdUlGMnc0NERHelFoZk1rdHJtYwpUU2VHWC9oSWtIeU9CVGY2R1FEeU1jVTVpL3lDMTZ1bDEzRXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV5VmhQbnI5YjVQUVE3ZTJwdEdIbDZ3cGR3eFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFPanVaVDFmaUpkVGp2ZS85WStwMVBWT3ZvZFk3cGdEcmdhUURBai9NeFY4RFh1SUZhSnN1aFVlCnBqL0E5UTFrYWtScDg2cmhkSlo4eE1tTlVhaWNzdzhsWjlScWorOTJxNlpiQWVkV0tlZkkyWHhicXRZeTVMRHcKcGo2TndFUGNhWG1haVA1SXQ0SmVPUVA0TFlmNnNibXVBcFhpYTFIVnZ2OHdMVFIrNFpNc3BQZ2EzcGVXeGlMRgpDOE1KdWtKaUROY0Y2aUVJck5kdkVMOEVaVVFQeVpBMWljNHAwTmlQZUdmZFlNMjkrUDN0bXZEUFYvUmxBbXhpCmR2UjdNYVdHTk1aME5JUjVrcE8vTnAzRTQ0WHUyTGxsZ05TcDdNcndHaU4wODdBelZsc2dTcWFmWDYzMWYrOFgKYkhwMzdTVmpWMmFhaDRTWG5kM1orcWY0TWpTS2x4OD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRRVM3cmV3Q1dXYm43SHhtYTdDSzZBekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpFd01EYzFPREE0V2hjTk1qY3dOekV3TURjMQpPREE0V2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeWRack5vdHRvRlp0UHRSNm15Zm0Kdmp3Rk9OWkRhNGp6aFc0WVcrR1YwdjEyeTZoa2RxbUMydlh6UEZUdjB5ZkhobHdXNTNUUHdzaHFsZm5TdzJhaAo2VWt5ZGdNTkNWNXJ3NlZFN0pHT1BmWnUyTGcvQXZ3ZytkOWpvUHR4UGdSSW8zL1UzMS9icENJQlcxdFlocWltClp4TVZqUFdqYUMzV1BEWEN0V1U1dk9UYnpDOXBjM3JVUWVBcFJ3c2U0eS92U2RZaGJkTkJHMXFGdUdJWEd5ZDgKMGx0QUpOZ3Z3SjM0YkcrUExNU1FqbmtKSlczK1lDZ1h4K01VRDdNQ1VFRjNCVDd4blFNQzN1NldXVjV6eHlJZworR3dvTVpQdG1NeTl3aVFURUVMcHZZSCtTQ1VGaHJXUEtpRGpKSGhyQm94c3JCU2ZYajhwSTJtbzlGTHYwZ2ZSCk93SURBUUFCbzRIZU1JSGJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUSldFK2V2MXZrOUJEdAo3YW0wWWVYckNsM0RGakI3QmdOVkhSRUVkREJ5Z2g5amJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXVZMmxzCmFYVnRMbWx2Z2hBcUxtMWxjMmd1WTJsc2FYVnRMbWx2Z2lWamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXUKYTNWaVpTMXplWE4wWlcwdWMzWmpod1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUURFMlZwcnBoSWdySHVlbWRpZXZDVzQzMnFYeExPdzllMmdQVmovL2YvUVArSXUwZjF2ClluNGF4OFZoSW1OZy9OVVlyRk9veUY1dDQ5SlhzWURXcnc4UkdVMVVCL2s5VzdTYmZrZ1dIcDBZaHhlZWtiSVEKYVNxK2o0U05ycEVUeTFsNm1XekZSbWJpdGxYM3FZeTRKZWVwSzdYdCtDbXhadVFzc0NROFFidW1uZ0pHaWxMMwp4VEZoM1kvRGVOeFk1Z1I5dnVJM0ZFanBTdklUR1RCQWFEVkJlVXB1VTlZSmZFL3BMVE9hMTE2UkI4K09qSExlCmNsUU8xN2ovdnJJVkhxZXNoZWgxOHgvRktWY2o0WmdjZG91RWo0dWhZK2tPRmpQZnJYY2FkeUlSVDZtOVdnRzEKOG1HVmVNeE1VL2ljTWVjajNGeVVuRzFtdTNzOVY0UXk0d0RTCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeWRack5vdHRvRlp0UHRSNm15Zm12andGT05aRGE0anpoVzRZVytHVjB2MTJ5NmhrCmRxbUMydlh6UEZUdjB5ZkhobHdXNTNUUHdzaHFsZm5TdzJhaDZVa3lkZ01OQ1Y1cnc2VkU3SkdPUGZadTJMZy8KQXZ3ZytkOWpvUHR4UGdSSW8zL1UzMS9icENJQlcxdFlocWltWnhNVmpQV2phQzNXUERYQ3RXVTV2T1RiekM5cApjM3JVUWVBcFJ3c2U0eS92U2RZaGJkTkJHMXFGdUdJWEd5ZDgwbHRBSk5ndndKMzRiRytQTE1TUWpua0pKVzMrCllDZ1h4K01VRDdNQ1VFRjNCVDd4blFNQzN1NldXVjV6eHlJZytHd29NWlB0bU15OXdpUVRFRUxwdllIK1NDVUYKaHJXUEtpRGpKSGhyQm94c3JCU2ZYajhwSTJtbzlGTHYwZ2ZST3dJREFRQUJBb0lCQUEwZDNSdlBWZEY4ckY3UAo2aVBaSlBxcDVlRDZzNmp5WG5rR1haampBUnlVRWp0TDl6TnE4ckVPR0wrTCtZWHNhT0FIYmdtZW9yM1N6bkp1CnFNN0FCYmVtWlJ3Y09LV3FPRENmdGVuMXo1dWhQelRnVEdBQ1NKWlVlU0lHRlNibG1sN2R1TlRIWXZ1NHBnUHMKM01Ucmd0emg5WjJTZlFzUko0SUVNR0lmY1BBZ2hjakNvMXFGcE43b1IwdzdMRlRMVFBPenpmQUV2eHpkZ3pGYQp6RmxJYXVYZmIxR1hjb2dOK09rd2k1R1ZPYVNqV0xZZ0VkaGdZOW9tSkcvaEthSjBEenQ3cHRxRUpKdVpZbWE1CnNIdlJjTkJpWkxxM1QzeHBhT1Znb1lyN1pDbVFZajNaRTJ2QWlyK2x3c1VBeUVBSjJTZXlRajhqUVRpQ05lakQKYlZuVmVyRUNnWUVBNDBJOXNaMmtHTGJ6MWhXTk9wa0xsNGxNZDY4Sy9DYklXUTlWejZNTU9VRjhNUVNvMGlSOQprcjlvWnlUNDNEcHRBQnlYckF2OGlMaTJBWGR4QUZWS0EzeUlIdWxDWTJ6ejc3ZnhLV0pFL1lFaU52Q3JUSTUxCjNLUjRPVWlpQk12NjI3OWkybDVxRjFBbkFIbzZFT0ZtdGxmNDdoazNmd04xZ2E0dm9YVUtWVWtDZ1lFQTQxMGoKYTZzNDdPc1dSSjNXazg2VkFCMU1qZ3ZNdFo3LzdaMXltYy93TnpudlpaNmJNU2p0NkpUV1RaY2JDSXcvcGFYSwoxNzNpMEh3SU1QS3ZNVzI3TG82N1h2dnhQaVZYaElydzZpRnRYQmtsc01CR2NnMTRwRDFCcFFjNkNuUWNHQjhoCkx1VDUzeHNLM3ZQWHU0Zm1HemVYbEJmck5rQTByeTREcnJOZ0ptTUNnWUJNY3BZS1Q3dEp6UkdOYk1hTGRieGUKaDRNL3A1U01hZ2R2WGlkQnA5bU8wU2FUM3J0anBYN1FoSzc4TTRXN243UFhHOGN4eXY1eWg2QkNNZ25EVU8ySwo2ck5ub3BRQW1rQWMzY1cwWkNoTkZzbUpyY0FTQ3NJL0xOeDhlS0IzK0o0MG1kY0pHa1daL2c2QXJKMG4zSXNPCnY5MHZTekJOKzczbGw5RFNBV3N1Y1FLQmdRQ0Q5TVpkOHQzekF1M0ZuU1d3V3pFM0E4b3Vsc0tVbGxkSy9ScEsKRXRrRDlHZnd2b0NybzJtUWx2Rlp6dDB0dE5ncnQzRm1qUnBhamVIakpyWnZKWlNCak8xS1QwYlFIclFRaE9NVgp2NWpNM3Z0MC9lTGt4dFRCM1p0L3dCWDdneS9iQUJZdU5VNmdJZjNKTUJTQkRucUtTVlY3NmZYbFlwWXhKYStWCmNSM1lxUUtCZ0Y1OXhRTjBNNEhJbHIvekxlcjNia0xDSHNxRC9FT2tFV0pvY2xPbnFmSk5TWFphdTNXeHgzbVEKWXhzTmdtSjhVaVlEYTk2UldwTHE3czZYMUc1bEpkYlFETFBVZmtNbVF5TVJVNG9DRjVXTEhMbk5aQ3B0UnJBNApVMnRGMjJraWROWFpKNkduUnlPWm55M09xdUxrajNDNEkzQ01KU0xZM2VNVkV4NHFVWVQxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTU1JS3hNbzlaWDczWktFM3pab0ttakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpFd01EYzFPREEzV2hjTk1qY3dOekV3TURjMQpPREEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHAyUkdTZ2ViUzJLQWJETkVTSnBjSDlyRzNzMzIrUkRtNlErak5vN2FHVlpyc2dMZzEKV0NSekVXbkxvMjlNelBJMENmSFRHcTROVVd4TDg4dGtlNC9NazVmOThzeFpHTUZpc1hBMGRMek94K293QUFmbgpyOWtNL1U3d1crRXhsbHNnMHB1NkkramYzWVpScG9YTzJaN1NlTFF6bUxndllUYWdCZ0ovZ2g5cTd4ZzNvLzNPCjJwRVhRZFU4SHBDQy9uRHUxamJTRitMakxqMEZKZEZReWQvQWk0THpGL0htenpMeEdySVpmMlQwSzQ1VWJnOFkKM2lxaElNZUhDUW96T1ZxdFN4K2Q2ZDV1OGtTeEFHN3RabTRNdUJjSFdzUllIdUlGMnc0NERHelFoZk1rdHJtYwpUU2VHWC9oSWtIeU9CVGY2R1FEeU1jVTVpL3lDMTZ1bDEzRXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV5VmhQbnI5YjVQUVE3ZTJwdEdIbDZ3cGR3eFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFPanVaVDFmaUpkVGp2ZS85WStwMVBWT3ZvZFk3cGdEcmdhUURBai9NeFY4RFh1SUZhSnN1aFVlCnBqL0E5UTFrYWtScDg2cmhkSlo4eE1tTlVhaWNzdzhsWjlScWorOTJxNlpiQWVkV0tlZkkyWHhicXRZeTVMRHcKcGo2TndFUGNhWG1haVA1SXQ0SmVPUVA0TFlmNnNibXVBcFhpYTFIVnZ2OHdMVFIrNFpNc3BQZ2EzcGVXeGlMRgpDOE1KdWtKaUROY0Y2aUVJck5kdkVMOEVaVVFQeVpBMWljNHAwTmlQZUdmZFlNMjkrUDN0bXZEUFYvUmxBbXhpCmR2UjdNYVdHTk1aME5JUjVrcE8vTnAzRTQ0WHUyTGxsZ05TcDdNcndHaU4wODdBelZsc2dTcWFmWDYzMWYrOFgKYkhwMzdTVmpWMmFhaDRTWG5kM1orcWY0TWpTS2x4OD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRWEVsY2s2RktINi9iRFJlODJra2ZpVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpFd01EYzFPREE0V2hjTk1qY3dOekV3TURjMQpPREE0V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEZ2l5Y0NUSEN2QndUc2NqWWhUVUVQTVZDdGpaQXAKZmI4RlZhaTQwT1VCWHFDd3JqYm5TRG9aYWRCRHBpQ2tCTW12TDloY0FUT1hYa3lUN3pnME9QMUQrazhYRUFIMQo2aVZ6ekphbmhhTFFnYTFZM1lWMHQrQW95alFMckF3MWFLamhpZTlaMDFjOXljMVhyZm4wN25EWlNzTW0zYUF6CndSbDNKYzBTT01qTHRuaHFhc0FmeVBhRXhsQVljdS93YkdOUXNzT1BVMGR3QWFvVVdmNGZBYmxHSE9Xa1VRNjQKR2N0S2ZpdC84bVNkR2p0V2pUeHQ4SkVwbzcrazZLMVZtV2NjSUlPTXk0OVh2UnBmOVlkbjh4amtuYVgxU1lWRQpPNkZ4Q2xDWEZYb05KVWJXZWY2Qzl4VkhKckJKSk41alJUSE1paldrakp2Q0t6V2FXNk9pdXdnekFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZNbFlUNTYvVytUMEVPM3RxYlJoNWVzSwpYY01XTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUE0K0lBLzN3V0J2eXJLbHJ5UTBobVVxT0pobHgzeGM3WC9JdUViaUtZVy9MZW1kZ3gKS01STmhoeDRFNkQrMHJtMGZIeUdWNFpIZUhCQXVQbWhndkxkTm9PQi9PS2lFUzhRN0N0WC9HWHRwYXJuWDJhaQowYm1HLzJ1VkpPZDdJS0RFSjFVdGtLdkQxZHB4d2R6ZFJsSUNzcldaQmV3UXMvVHR2K3IveDZnTUlrNHhodTR5CjI1QWp0d0xZL2dvV2NmWkdidWlMSU9tcTE5RkVpSnQxb0Z3MUw4ckw5TW1vNzhRYXFXM1FydkZHaERzZ2hoamwKbnZ1bVBmTTRqVFhJak5KTHhLZ3FjOGhnQnBFc2dZQTlqWGNFY056MDFlRmRMS2FHeE1ad3dEdW13WU5WQkJCcwpOL3pEUzdTYkJ5ZEd4UkZzWE1NOUhET1ppTy9sMzRKWWJVMXlsQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNElzbkFreHdyd2NFN0hJMklVMUJEekZRclkyUUtYMi9CVldvdU5EbEFWNmdzSzQyCjUwZzZHV25RUTZZZ3BBVEpyeS9ZWEFFemwxNU1rKzg0TkRqOVEvcFBGeEFCOWVvbGM4eVdwNFdpMElHdFdOMkYKZExmZ0tNbzBDNndNTldpbzRZbnZXZE5YUGNuTlY2MzU5TzV3MlVyREp0MmdNOEVaZHlYTkVqakl5N1o0YW1yQQpIOGoyaE1aUUdITHY4R3hqVUxMRGoxTkhjQUdxRkZuK0h3RzVSaHpscEZFT3VCbkxTbjRyZi9Ka25SbzdWbzA4CmJmQ1JLYU8vcE9pdFZabG5IQ0NEak11UFY3MGFYL1dIWi9NWTVKMmw5VW1GUkR1aGNRcFFseFY2RFNWRzFubisKZ3ZjVlJ5YXdTU1RlWTBVeHpJbzFwSXlid2lzMW1sdWpvcnNJTXdJREFRQUJBb0lCQVFDRURuS0hzSXNJOU5qWgpjaVlSbWN5c2NiVmdESVIvVWx2WWVGTTlObVdvVTQydnV4WEJHY0pKbGVpTkVKUGJ3cEVXdmMzQjlsYndLOTVmCmxtMzRrSmVxdGZoenVNOWVZREZjbERMNkhPYnZONFRLWWFXT1NtSER1MysyYVozWWYwL3JMT01lY2VPNkRBZi8KQyt1WU4rOFliQmF2c2VINDdoVGE5TmxSWVNIK1k1MFZLL2UvSExwZkxDazcvUkVGYU5IWjhQTG9QS2ZSdk51ZQpsc3ZuR2pNSzM3NGhxbDRvcHMxL2xFRFQ2M2lqVTZTM2NkN1NaaGJGMnFZbExEaVVLeE1venk3cE9ZcHVGYkRaCkliZXllMGRWbTVwMFVka3hoTURZYnBHVHAvUWxudWlKNHBnTk5TNDNLdGk4Y3pQZlpKTnRJWGgzSW5NQjRKemcKaWYxalBiUXBBb0dCQVBBR3lBSm5NYWdHS2hJWk5GRkdjOW5iYk41ZE52VGpiMkFwZWYrbFZhSld6SGd3UGtpdApHS2xOVEpZMVVYeE5YNWNtM2RYMnFONE9Zc2J2M1VyNTQ3WVlPRzd4OS9Wb1FhbXFpOWRTWXpNbmlISlN4ZjBjCjlHd0hGVTEwdFU4RStoeFM2cUVjN0Q1dXRHaWxOY0FyOEtmWHdjSWNhNTVLdXM5MmxOVEZTYm5YQW9HQkFPOTgKbUlOWU5xU3piR1hMWlV1eVIrMGRnRS9scStuOU8rb29ZOGxoWG1Rc1lhdURUbjROQ3pOeEJpUnBKVy9YWnVaSwo5MkNLSDdObUtsUkVkaGFvVlZkbk1CblBNZmpncy8xNDZHQ1BIY09BRE82Y3hEbzl1bTR6Z1BiZkxQcmpLb0hvCjZqOHZqcGxkanBUdU9YYzJ6WE1vQ0dpOXdhTTRiNnVGTnZHOWdmRUZBb0dBRldrbGNrRnVSb1MyUUFNTGpheHgKTFIvTHFGSThVci91OFc4QnVQSXduMWlLeUxYVStIcW9Wb0hVc1JsMGVWZ1ZqTkFrdmE5UkJPM1hsZE5UdEJweQpXNDN4aXNQKzBGOUtiQzRRWjFhc0RxWWFIOGlPYkxPbWdmUm56QTc3RlY5bVNCeUZYWFhOQlF5dS94NnRtc1RRCnBNZzBPbko2anhZdmI4NHVISVMwdk9VQ2dZRUFuSUd6ZGRxWFUwbENaTC9vZ2ZDUG1zRDEwc0VJZVZFWjc2dlgKa29xRVVqakMxNEJuTW04NXk3Tm9UVEU5MnZwTTcrRThDeVlaRTNlSDRDd2hkQ3NzSW9OMzV0WUdGVnhicENGNAowMm1VRE9oSkMwTDk1Z1hqS1JPVmkwQk1OK1Z2S1JqYXhOSkNnYTJuZVdLNXdWUGFMaENTZGtqVUcrUE03cTJQCk82b2FHalVDZ1lCZUR3R1hkRndUaTAxNUtZa0pXWjYzUHQybDNQMHdtWUNQUFUzbGE4UjJNS1J6OXB1SDlKQzkKWTh0a3NObDhoZjFXWURBOVdaK2dnOHl0RmdGU3dPSnhiajBjeXBUNGtHTk9hb0svR045V0R5K3RZakROdC9FZApwYmNva3ZyNGhvUjFqRmdBejRuT0FxMHpGZnVIdjRSSVdlUWVWRzJJUUJzKzkwZWNLVnIxRWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTU1JS3hNbzlaWDczWktFM3pab0ttakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpFd01EYzFPREEzV2hjTk1qY3dOekV3TURjMQpPREEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHAyUkdTZ2ViUzJLQWJETkVTSnBjSDlyRzNzMzIrUkRtNlErak5vN2FHVlpyc2dMZzEKV0NSekVXbkxvMjlNelBJMENmSFRHcTROVVd4TDg4dGtlNC9NazVmOThzeFpHTUZpc1hBMGRMek94K293QUFmbgpyOWtNL1U3d1crRXhsbHNnMHB1NkkramYzWVpScG9YTzJaN1NlTFF6bUxndllUYWdCZ0ovZ2g5cTd4ZzNvLzNPCjJwRVhRZFU4SHBDQy9uRHUxamJTRitMakxqMEZKZEZReWQvQWk0THpGL0htenpMeEdySVpmMlQwSzQ1VWJnOFkKM2lxaElNZUhDUW96T1ZxdFN4K2Q2ZDV1OGtTeEFHN3RabTRNdUJjSFdzUllIdUlGMnc0NERHelFoZk1rdHJtYwpUU2VHWC9oSWtIeU9CVGY2R1FEeU1jVTVpL3lDMTZ1bDEzRXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV5VmhQbnI5YjVQUVE3ZTJwdEdIbDZ3cGR3eFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFPanVaVDFmaUpkVGp2ZS85WStwMVBWT3ZvZFk3cGdEcmdhUURBai9NeFY4RFh1SUZhSnN1aFVlCnBqL0E5UTFrYWtScDg2cmhkSlo4eE1tTlVhaWNzdzhsWjlScWorOTJxNlpiQWVkV0tlZkkyWHhicXRZeTVMRHcKcGo2TndFUGNhWG1haVA1SXQ0SmVPUVA0TFlmNnNibXVBcFhpYTFIVnZ2OHdMVFIrNFpNc3BQZ2EzcGVXeGlMRgpDOE1KdWtKaUROY0Y2aUVJck5kdkVMOEVaVVFQeVpBMWljNHAwTmlQZUdmZFlNMjkrUDN0bXZEUFYvUmxBbXhpCmR2UjdNYVdHTk1aME5JUjVrcE8vTnAzRTQ0WHUyTGxsZ05TcDdNcndHaU4wODdBelZsc2dTcWFmWDYzMWYrOFgKYkhwMzdTVmpWMmFhaDRTWG5kM1orcWY0TWpTS2x4OD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRREJlWndFSVJjdWh4RTBNMmYxOXB4akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpFd01EYzFPREE0V2hjTk1qY3dOekV3TURjMQpPREE0V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdkhGV0pzYnFzUU1xSjZNZkVzVmEKRHJNblI4VThBMG1BQmFBNFd4WVN2ZWFSVkhBbUNuODBwMDNSNm1YOVpoL1dLaUdsSVZFM0ZMaG9lSE93T3hxRwpOMXR3Yzk1YWxZL3YrclBRakVkd2VyQkZuL3FhbzhkWHJ1VXV1aHlVc1FvZXR5UTlIbldSeDJmMktzNkIvR2MrCllvM1c4YzNjcWFiUndNQUJxT1pCRVpia2tRVElkU3RsamlmYWJnb01wL2E2cmRYZ0JhUk04NkZCc3UxT25oUGMKTkwvekYya0hnNFJUZzFnb2F4TUEyNFZqbnpLL2l0RnFKL1M1QjgxdUFvVHh1OWdDaVFkOVJIcXpZNXJFOTlqQwpyS0VqUWJQV2tpR2M4OFNZTW5RZUhnUG9pdHpJck5JS2FyWFZtbW5vd1JPYzYyTUFQR1hVMHJmZ25JZWMrd3llCndRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUSldFK2V2MXZrOUJEdAo3YW0wWWVYckNsM0RGakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCZGtscjY1Sm9RajlMU2JZUnE0M1ZMZEtKdmhyYnQKcm5rd01DTDZnMEtKWHRZd1Fac3A3UDNoK005bC9yeWxrZ29yaWd5L1FTayswWjRXRXRjcEE2NE1zZGZiejRSMApwTVM4Uk1RNHBqVkkwRFU5ak9JSXo2OW5odkFwUkE3azNFRHNUaFpiODFQVTUzSmwzakRpc2hHdDJzUlBYLzlaCkswOE50bzBCYUdUNnlPakFqc2M4a2FVZkp2NGlWR0R5NXlOazBhTXZmbkNZMUN2aTdhQmV4UENJUVl5U25tc2IKclRGVW8wd2JwV0UzTjBTLzQrbFBaL1dJbm02TVA5Mkc0VjFtVGVEZHVXKzFxZGRXMEs3RnFHMXFpVzhNcWl5VwpXWlQ5RVpiR3JmNTNneDZvVnFHYkpBOE9YRkhUY0pPbVBWa3lsUTBLdWV4S1EvYnZsS1dncVJiVQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkhGV0pzYnFzUU1xSjZNZkVzVmFEck1uUjhVOEEwbUFCYUE0V3hZU3ZlYVJWSEFtCkNuODBwMDNSNm1YOVpoL1dLaUdsSVZFM0ZMaG9lSE93T3hxR04xdHdjOTVhbFkvdityUFFqRWR3ZXJCRm4vcWEKbzhkWHJ1VXV1aHlVc1FvZXR5UTlIbldSeDJmMktzNkIvR2MrWW8zVzhjM2NxYWJSd01BQnFPWkJFWmJra1FUSQpkU3RsamlmYWJnb01wL2E2cmRYZ0JhUk04NkZCc3UxT25oUGNOTC96RjJrSGc0UlRnMWdvYXhNQTI0VmpueksvCml0RnFKL1M1QjgxdUFvVHh1OWdDaVFkOVJIcXpZNXJFOTlqQ3JLRWpRYlBXa2lHYzg4U1lNblFlSGdQb2l0ekkKck5JS2FyWFZtbW5vd1JPYzYyTUFQR1hVMHJmZ25JZWMrd3lld1FJREFRQUJBb0lCQUZqR0k4bmN4ODlnS0VuSQpCT2w0NDNZdFhBSHBudDRGa0RRV1NMWlFiYi9ja1Bad1p0dG5GYzBEVWpMVW5VMnhEZG1IUkIydi92elo2dzFqCm90QVZMTW1EWURTVnVhTGZ6alFTNWRwUUJXTW5DNFhVTDJtY2pXZ3RPNWdkd3Nhc2Q4L2JXSmV5MTF4VFU1clMKOGxXUDVjblQvRUNwdEp5UHBCemoxMlJVSks4OTBIWE9RZmg1V045TDFkZjh2ZllqcTErV05VL2duNzlHQ0xrUQpnblBVN1I3RWJ1ZGdwVWo4YWtBam82Z3JRVlZVMVdhVDdKWHlNUUFtZjBKa3FwMWY3WkRtNXNLUFFUNGFQTWVuCjJSa2kwTnJLTGQ3WFRqYlR4eXdiK0cvUERubFN0RC93RWlXYTJsekRmZHJ2UVJXN0FSL3Y3MW5zdHRZdnFBUXgKaWNDM1c0a0NnWUVBeEtXUEwrYVIwMVlOM21yR29xaWhQNFk4a0FTVUJMSS9qWDZGbnpVeEQ5ajN6UXpQSnJraQpVRkNmV29nN0lmOXpqN1RkbHhxL2RuMGlkTFhTM0JRRytVb2FxdlBhSWM3K1d0Y2ttYS9SMEVkdlNoaEs2L2VmCjljMlBLV3g2YWpqakM4eDI4NmgvQ0RGT1NGRFg4S2hhZGQ5eUtPTEZuQU0wSEpjcGd3QzV5T01DZ1lFQTlWSGYKa1Fuak5SMGx1NUlUYS9hcDdhL05pdzZ5SDhKZXhNZDFJM0VkMCtnVkRKWldjYWFaRy94bEtKbUEyQ054bTdPNgppaitmaU1BYUtWQ2FYRkVUb1FyTlA1KzlvcmxFVmdNbERZRjVKQ0h3bnFuRjhQaHp4Y050ZjBKYktXdGN2N3ZiCm00N0JXeFQ4LzJEcEhZejAzTnhXVnAwQkZIdzJKekVWNFhGRW53c0NnWUFaZlZoZEhpY0MzT0c1VmQvZmo3b3YKRU1oaTVxVUZJdEhJRm9GZGpMaUtWRlp5bHRsM0xJSTlKT1l6QnZ1YlFaQ0tMU2lZQUppVzFFdVdFMGQ4elgvRgo2b3dnWXJHQXRtTVVCVlV5TXE4Z3IxSEdxZlYwTnNuZVE4SHQzYWpVZ2dFME0xR3I3Y2hobUhxTU55WjJoR3dOCllXUmIxbUZGQXNsTGQzQ2pFWUlEZndLQmdBd3NSOSsya2VPczBwYUFKUjZTV3RSRWlQcUJmQzAvUTl5WDJTUXQKRk1IVEhsaEZqWHlPTzhLN3YzbElSTEIwOGNvOEhPR0hUcTlHZVFYYnpnME9xTjZ3M29adHNzZEVValBDYkRCRApZSE4raTZZVDNwS2FnWVFxc21CQ05xdlRmQUszbTZvWVoxZlJyc3d0VHVQOGZwb0hCUEcvVUxKbmgzaGlZeWVRCnEwc0pBb0dCQUlWZ09yWGRlREI4eHdBUFNSWVViWm0zVjM1OTkwKy9UTWJaYm1CVlU4RnIyaHgzSWVRTXN4N1EKLzh1TGVRdkNRRWRWWHVycmI3QU5lYmxHY0QxSkdiQm5sbGVIV0RxbGEyY0xDM0ZTNzBWejUzMWJpSDRXZ2tjOQpTTUo3TG5hTHFSd0tFa05HQ1A4SGx4MDViM01PQ0Mwdjd2VTJYMmRNM1VKMHd1Rnk0K1J5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # A space-separated list of controller groups for which to enable metrics.
  # The special values of "all" and "none" are supported.
  controller-group-metrics:
    write-cni-file
    sync-host-ips
    sync-lb-maps-with-k8s-services
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "false"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns
    drop
    tcp
    flow
    port-distribution
    icmp
    httpV2:exemplars=true;labelsContext=source_ip,source_namespace,source_workload,destination_ip,destination_namespace,destination_workload,traffic_direction
  enable-hubble-open-metrics: "true"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "10"
  k8s-client-burst: "20"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: metrics
    port: 9962
    protocol: TCP
    targetPort: prometheus
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/cilium-operator/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: metrics
    port: 9963
    protocol: TCP
    targetPort: prometheus
  selector:
    io.cilium/app: operator
    name: cilium-operator
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
  annotations:
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        appArmorProfile:
          type: Unconfined
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - NET_RAW
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-agent/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cilium-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  namespaceSelector:
    matchNames:
    - kube-system
  endpoints:
  - port: metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
    relabelings:
    - replacement: ${1}
      sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
  - port: envoy-metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
    relabelings:
    - replacement: ${1}
      sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
  targetLabels:
  - k8s-app
---
# Source: cilium/templates/cilium-operator/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  namespaceSelector:
    matchNames:
    - kube-system
  endpoints:
  - port: metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
  targetLabels:
  - io.cilium/app
---
# Source: cilium/templates/clustermesh-apiserver/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: clustermesh-apiserver
      app.kubernetes.io/component: metrics
  namespaceSelector:
    matchNames:
    - kube-system
  endpoints:
  - port: apiserv-metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
  - port: etcd-metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
---
# Source: cilium/templates/hubble/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hubble
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
spec:
  selector:
    matchLabels:
      k8s-app: hubble
  namespaceSelector:
    matchNames:
    - kube-system
  endpoints:
  - port: hubble-metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
    relabelings:
    - replacement: ${1}
      sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
